services:
  auth_dev:
    container_name: auth_dev
    extends:
      file: docker-compose.base.yml
      service: auth_base
    build:
      target: dev
    env_file:
      - .env
    depends_on:
      - postgres_dev

  web_dev:
    container_name: web_dev
    extends:
      file: docker-compose.base.yml
      service: web_base
    env_file:
      - .env
    build:
      target: dev
    ports:
      - "5173:5173"

  nginx_dev:
    container_name: nginx_dev
    extends:
      file: docker-compose.base.yml
      service: nginx_base
    volumes:
      - ./config/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth_dev
      - web_dev
    networks:
      - my_networks

  postgres_dev:
    container_name: postgres_dev
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
    extends:
      file: docker-compose.base.yml
      service: postgres_base
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - my_networks

  sqlx_cli_dev:
    container_name: sqlx_cli_dev
    extends:
      file: docker-compose.base.yml
      service: sqlx_cli
    env_file:
      - .env
    environment:
      - DATABASE_URL=${POSTGRES_DATABASE_URL}
    depends_on:
      postgres_dev:
        condition: service_healthy
    networks:
      - my_networks

networks:
  my_networks:
    driver: bridge

volumes:
  postgres_data_dev:
  auth_target:
  cargo_cache:
  sqlx_cli_target:
